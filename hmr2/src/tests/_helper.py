import numpy as np
import tensorflow as tf


########
# Helper
########

def get_kp2d(config):
    real2d = np.array([[-0., - 0., 0.],
                       [-0., - 0., 0.],
                       [-0.04615784, 0.39888024, 1.],
                       [0.13562906, 0.39888024, 1.],
                       [-0., - 0., 0.],
                       [-0., - 0., 0.],
                       [-0.13137025, 0.12239134, 1.],
                       [-0., - 0., 0.],
                       [-0.07740241, - 0.19115287, 1.],
                       [0.20948029, - 0.27381432, 1.],
                       [0.34298003, 0.00552475, 1.],
                       [0.18959725, 0.3361715, 1.],
                       [-0., - 0., 0.],
                       [-0., - 0., 0.],
                       [-0.08308327, - 0.4191848, 1.],
                       [-0.06320029, - 0.46194088, 1.],
                       [-0.10296631, - 0.43628734, 1.],
                       [0.04473555, - 0.4676417, 1.],
                       [-0., - 0., 0.]], dtype=np.float32)
    real2d = np.tile(real2d, config.BATCH_SIZE).reshape((config.BATCH_SIZE, -1, 3))
    pred2d = np.array([[-0.12354, - 0.165464],
                       [-0.564564, - 0.546421],
                       [-0.04615784, 0.39888024],
                       [0.13562906, 0.39888024],
                       [-0.5465465, - 0.5654564],
                       [-0.54654564, - 0.5464565],
                       [-0.13537025, 0.15039134],
                       [-0.2164554, - 0.546546],
                       [-0.08640241, - 0.20115287],
                       [0.20956029, - 0.346481432],
                       [0.56368003, 0.084654655],
                       [0.264959725, 0.33658415],
                       [-0.0564654, - 0.4654984],
                       [-0.0894563, - 0.0954313],
                       [-0.10008327, - 0.5421848],
                       [-0.07520029, - 0.42394088],
                       [-0.15696631, - 0.39628734],
                       [0.0543555, - 0.4676417],
                       [-0.654666, - 0.1564654]], dtype=np.float32)
    pred2d = np.tile(pred2d, config.BATCH_SIZE).reshape((config.BATCH_SIZE, -1, 2))
    return pred2d, real2d


def get_kp3d(config):
    real_3d = np.array([[3.19104999e-01, 1.56473905e-01, 5.16962671e+00],
                        [4.89685953e-01, 2.28133023e-01, 5.56732798e+00],
                        [3.48312795e-01, -8.16581249e-02, 5.26987123e+00],
                        [7.44364858e-02, -7.06211030e-02, 5.37361431e+00],
                        [1.75328076e-01, 2.19870776e-01, 5.70508289e+00],
                        [3.43190432e-02, 1.50279999e-01, 5.29560423e+00],
                        [3.33558470e-01, -4.19503123e-01, 5.46074629e+00],
                        [4.70642626e-01, -2.47879356e-01, 5.35408878e+00],
                        [3.79559815e-01, -5.05320907e-01, 5.25675392e+00],
                        [9.03035998e-02, -5.39252758e-01, 5.38823223e+00],
                        [5.51452637e-02, -2.89190739e-01, 5.53063965e+00],
                        [2.48191088e-01, -4.31335121e-01, 5.48426390e+00],
                        [2.43143767e-01, -5.77598333e-01, 5.32628489e+00],
                        [2.88679212e-01, -7.86103129e-01, 5.34184408e+00]], dtype=np.float32)
    real_3d = np.tile(real_3d, config.BATCH_SIZE).reshape((config.BATCH_SIZE, -1, 3))
    real_3d = tf.convert_to_tensor(real_3d)
    pred_3d = np.array([[2.19104999e-01, 1.54673905e-01, 4.16962671e+00],
                        [3.89685953e-01, 2.99133023e-01, 4.56732798e+00],
                        [4.48312795e-01, -8.54581249e-02, 4.26987123e+00],
                        [2.44364858e-02, -7.89754030e-02, 4.37361431e+00],
                        [4.75328076e-01, 2.99870776e-01, 4.70508289e+00],
                        [2.43190432e-02, 1.81279999e-01, 4.29560423e+00],
                        [3.23258470e-01, -4.99503123e-01, 4.46074629e+00],
                        [4.89742626e-01, -2.88879356e-01, 4.35408878e+00],
                        [3.89559815e-01, -4.22320907e-01, 4.25675392e+00],
                        [9.99855998e-02, -4.46252758e-01, 4.38823223e+00],
                        [4.51452637e-02, -2.94190739e-01, 4.53063965e+00],
                        [2.48191088e-01, -4.88635121e-01, 4.48426390e+00],
                        [2.43143767e-01, -4.99798333e-01, 4.32628489e+00],
                        [2.88679212e-01, -6.87903129e-01, 4.34184408e+00]], dtype=np.float32)
    pred_3d = np.tile(pred_3d, config.BATCH_SIZE).reshape((config.BATCH_SIZE, -1, 3))
    pred_3d = tf.convert_to_tensor(pred_3d)
    return pred_3d, real_3d
